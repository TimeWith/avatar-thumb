{"version":3,"sources":["../src/index.js"],"names":["AvatarThumb","props","src","firstName","lastName","style","bgColor","radius","fontSize","color","AvatarDIV","div","width","height","borderRadius","parseFloat","overflow","element","AvatarIMG","img","minWidth","minHeight","Circle","lineHeight","backgroundColor","textAlign","fontWeight","initials","charAt"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;;;IAEqBA,W;;;;;;;;;;;6BAEV;AAAA,mBAEqC,KAAKC,KAF1C;AAAA,UAECC,GAFD,UAECA,GAFD;AAAA,UAEMC,SAFN,UAEMA,SAFN;AAAA,UAEiBC,QAFjB,UAEiBA,QAFjB;AAAA,UAE2BC,KAF3B,UAE2BA,KAF3B;AAAA,oBAIoC,KAAKJ,KAJzC;AAAA,UAIDK,OAJC,WAIDA,OAJC;AAAA,UAIQC,MAJR,WAIQA,MAJR;AAAA,UAIgBC,QAJhB,WAIgBA,QAJhB;AAAA,UAI0BC,KAJ1B,WAI0BA,KAJ1B;;AAKP,UAAI,CAACH,OAAL,EAAc;AAAEA,kBAAU,SAAV;AAAoB;AACpC,UAAI,CAACE,QAAL,EAAe;AAAEA,mBAAW,MAAX;AAAkB;AACnC,UAAI,CAACD,MAAL,EAAa;AAAEA,iBAAS,MAAT;AAAgB;AAC/B,UAAI,CAACE,KAAL,EAAY;AAAEA,gBAAQ,OAAR;AAAgB;;AAE9B,UAAMC,YAAY,oBAAUC,GAAV,CAAc;AAC9BC,eAAOL,MADuB;AAE9BM,gBAAQN,MAFsB;AAG9BO,sBAAkBC,WAAWR,MAAX,IAAqB,CAAvC,OAH8B;AAI9BS,kBAAU;AAJoB,OAAd,CAAlB;;AAOA,UAAIC,gBAAJ;AACA,UAAIf,GAAJ,EAAS;AACP,YAAMgB,YAAY,oBAAUC,GAAV,CAAc;AAC9BP,iBAAO,MADuB;AAE9BC,kBAAQ,MAFsB;AAG9BO,oBAAUb,MAHoB;AAI9Bc,qBAAWd;AAJmB,SAAd,CAAlB;AAMAU,kBAAU,8BAAC,SAAD,IAAW,KAAKf,GAAhB,EAAqB,KAASC,SAAT,SAAsBC,QAA3C,GAAV;AACD,OARD,MAQO;AACL,YAAMkB,SAAS,oBAAUX,GAAV;AACbC,iBAAOL,MADM;AAEbM,kBAAQN,MAFK;AAGbgB,sBAAYhB,MAHC;AAIbiB,2BAAiBlB,OAJJ;AAKbmB,qBAAW,QALE;AAMbC,sBAAY,MANC;AAOblB,oBAAaD,SAAO,CAApB,OAPa;AAQbE,iBAAOA;AARM,wBASF,QATE,EAAf;AAWA,YAAMkB,WAAWxB,aAAaC,QAAb,GACbD,UAAUyB,MAAV,CAAiB,CAAjB,IAAsBxB,SAASwB,MAAT,CAAgB,CAAhB,CADT,GAEbzB,UAAUyB,MAAV,CAAiB,CAAjB,CAFJ;AAGAX,kBAAU;AAAC,gBAAD;AAAA;AAAUU;AAAV,SAAV;AACD;;AAED,aACE;AAAC,iBAAD;AAAA,UAAW,OAAOtB,KAAlB;AACIY;AADJ,OADF;AAKD;;;;;;kBAnDkBjB,W","file":"index.js","sourcesContent":["import React, { Component } from 'react'\nimport glamorous from 'glamorous'\n\nexport default class AvatarThumb extends Component {\n\n  render() {\n\n    const { src, firstName, lastName, style } = this.props\n    \n    let { bgColor, radius, fontSize, color } = this.props\n    if (!bgColor) { bgColor = '#7DCE82'}\n    if (!fontSize) { fontSize = '18px'}\n    if (!radius) { radius = '45px'}\n    if (!color) { color = 'white'}\n\n    const AvatarDIV = glamorous.div({\n      width: radius,\n      height: radius,\n      borderRadius: `${(parseFloat(radius) / 2)}px`,\n      overflow: 'hidden',\n    })\n\n    let element\n    if (src) {\n      const AvatarIMG = glamorous.img({\n        width: 'auto',\n        height: 'auto',\n        minWidth: radius,\n        minHeight: radius,\n      })\n      element = <AvatarIMG src={src} alt={ `${firstName} ${lastName}` }/>\n    } else {\n      const Circle = glamorous.div({\n        width: radius,\n        height: radius,\n        lineHeight: radius,\n        backgroundColor: bgColor,\n        textAlign: 'center',\n        fontWeight: 'bold',\n        fontSize: `${radius/2}px`,\n        color: color,\n        textAlign: 'center',\n      })\n      const initials = firstName && lastName\n        ? firstName.charAt(0) + lastName.charAt(0)\n        : firstName.charAt(0)\n      element = <Circle>{ initials }</Circle>\n    }\n\n    return (\n      <AvatarDIV style={style}>\n        { element }\n      </AvatarDIV>\n    )\n  }\n}"]}